/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import utils.Utils;
/**
 *
 * @author lsilva
 */
public class ChatReceptor extends javax.swing.JFrame implements Runnable {

    Socket server;

    private String receptor;
    private ArrayList<String> message_list;

    ObjectOutputStream saida;
    ObjectInputStream entrada;

    ChatReceptor(String receptor, Socket server) {
        super("Chat com " + receptor);
        this.server = server;
        this.receptor = receptor;
        this.setLocationRelativeTo(null);
        initComponents();
        message_list = new ArrayList<String>();
        newStart();
    }
    
        ChatReceptor(Socket server) {
        this.server = server;
        this.receptor = receptor;
        this.setLocationRelativeTo(null);
        initComponents();
        message_list = new ArrayList<String>();
        newStart();
    }

    public void newStart() {
        this.pack();
        this.setVisible(true);
        Thread threadChat = new Thread(this);
        threadChat.start();
        
    }

    public void append_message(String received) {
        message_list.add(received);
        String message = "";
        for (String str : message_list) {
            message += str;
        }
        jEPMessages.setText(message);
    }

    public void send() {
//        try {
            //saida = null;
            //saida = new ObjectOutputStream(server.getOutputStream());
            //saida.writeObject(jTFMessage.getText());
            
            Utils.sendMessage(server, jTFMessage.getText());
            
            DateFormat df = new SimpleDateFormat("hh:mm:ss");
            append_message("<b>[" + df.format(new Date()) + "] Eu: <b><i>" + jTFMessage.getText() + "</i><br>");
            jTFMessage.setText("");
//        } catch (IOException ex) {
//            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
    @Override
    public void run() {
         DateFormat df = new SimpleDateFormat("hh:mm:ss");
        while (true) {        
                String msgReceive = Utils.receiveMessage(server);
             try {
                 append_message("<b>[" + df.format(new Date()) + "]"+  server.getOutputStream() + " : <b><i>" + msgReceive + "</i><br>");
             } catch (IOException ex) {
                 Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPReceptor1 = new javax.swing.JPanel();
        jSPMessages1 = new javax.swing.JScrollPane();
        jEPMessages = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jTFMessage = new javax.swing.JTextField();
        jBSendMessage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(402, 479));

        jPReceptor1.setBorder(javax.swing.BorderFactory.createTitledBorder("Receptor"));

        jEPMessages.setEditable(false);
        jEPMessages.setContentType("text/html"); // NOI18N
        jSPMessages1.setViewportView(jEPMessages);

        javax.swing.GroupLayout jPReceptor1Layout = new javax.swing.GroupLayout(jPReceptor1);
        jPReceptor1.setLayout(jPReceptor1Layout);
        jPReceptor1Layout.setHorizontalGroup(
            jPReceptor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPReceptor1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSPMessages1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPReceptor1Layout.setVerticalGroup(
            jPReceptor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPReceptor1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSPMessages1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Digite uma mensagem: "));

        jTFMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFMessageKeyPressed(evt);
            }
        });

        jBSendMessage.setText("Enviar");
        jBSendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSendMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTFMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBSendMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSendMessage)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addComponent(jPReceptor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(437, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPReceptor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 138, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFMessageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            send();
        }
    }//GEN-LAST:event_jTFMessageKeyPressed

    private void jBSendMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSendMessageActionPerformed
        send();
    }//GEN-LAST:event_jBSendMessageActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBSendMessage;
    private javax.swing.JEditorPane jEPMessages;
    private javax.swing.JPanel jPReceptor1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jSPMessages1;
    private javax.swing.JTextField jTFMessage;
    // End of variables declaration//GEN-END:variables
}
